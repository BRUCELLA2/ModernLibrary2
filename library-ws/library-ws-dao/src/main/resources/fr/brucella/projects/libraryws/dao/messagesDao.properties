# All DAO
permissionDenied                                            = Un probl\u00e8me de droits d'acc\u00e8s \u00e0 la base de donn\u00e9es a \u00e9t\u00e9 d\u00e9tect\u00e9.
dataAccessResourceFailure                                   = La connexion \u00e0 la base de donn\u00e9es a \u00e9chou\u00e9.
dataAccess                                                  = Un probl\u00e8me technique au niveau de la base de donn\u00e9es est survenu.

# AuthorDao
authorDao.getAuthor.notFound                                = L'auteur demand\u00e9 n'a pas \u00e9t\u00e9 trouv\u00e9.
authorDao.getBookAuthors.notFound                           = Aucun auteur n'a \u00e9t\u00e9 trouv\u00e9.
authorDao.updateAuthor.notFound                             = L'auteur \u00e0 modifier n'a pas \u00e9t\u00e9 trouv\u00e9. La mise \u00e0 jour n'a pas \u00e9t\u00e9 faite.
authorDao.updateAuthor.integrityViolation                   = Les donn\u00e9es n'\u00e9tant pas conformes, la mise \u00e0 jour de l'auteur n'a pu \u00eatre r\u00e9alis\u00e9e.
authorDao.insertAuthor.duplicate                            = Un auteur existe d\u00e9j\u00e0 avec cet identifiant.
authorDao.insertAuthor.integrityViolation                   = Les donn\u00e9es n'\u00e9tant pas conformes, la cr\u00e9ation de l'auteur n'a pu \u00eatre r\u00e9alis\u00e9e.
authorDao.deleteAuthor.notFound                             = L'auteur \u00e0 supprimer n'a pas \u00e9t\u00e9 trouv\u00e9. La suppression n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.

# BookDao
bookDao.getBook.notFound                                    = Le livre demand\u00e9 n'a pas \u00e9t\u00e9 trouv\u00e9.
bookDao.getBookDetails.notFound                             = Le livre demand\u00e9 n'a pas \u00e9t\u00e9 trouv\u00e9.
bookDao.getBookDetailsList.notFound                         = Aucun livre n'a \u00e9t\u00e9 trouv\u00e9.
bookDao.getSearchBookDetailsList.notFound                   = Aucun livre correspondant \u00e0 la recherche n'a \u00e9t\u00e9 trouv\u00e9.
bookDao.updateBook.notFound                                 = Le livre \u00e0 modifier n'a pas \u00e9t\u00e9 trouv\u00e9. La mise \u00e0 jour n'a pas \u00e9t\u00e9 faite.
bookDao.updateBook.integrityViolation                       = Les donn\u00e9es n'\u00e9tant pas conformes, la mise \u00e0 jour du livre n'a pu \u00eatre r\u00e9alis\u00e9e.
bookDao.insertBook.duplicate                                = Un livre existe d\u00e9j\u00e0 avec cet identifiant.
bookDao.insertBook.integrityViolation                       = Les donn\u00e9es n'\u00e9tant pas conformes, la cr\u00e9ation du livre n'a pu \u00eatre r\u00e9alis\u00e9e.
bookDao.deleteBook.notFound                                 = Le livre \u00e0 supprimer n'a pas \u00e9t\u00e9 trouv\u00e9. La suppression n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.

# BookBorrowedDao
bookBorrowedDao.getBookBorrowed.notFound                    = L'emprunt n'a pas \u00e9t\u00e9 trouv\u00e9.
bookBorrowedDao.getBorrowListWithUserLoginAndTitle.notFound = Aucun emprunt n'a \u00e9t\u00e9 trouv\u00e9.
bookBorrowedDao.getUserCurrentlyBorrows.notFound            = Aucun emprunt n'a \u00e9t\u00e9 trouv\u00e9 pour cet utilisateur.
bookBorrowedDao.getBorrowExpired.notFound                   = Aucun emprunt non rendu est expir\u00e9.
bookBorrowedDao.getUserBorrowsExpired.notFound              = Aucun emprunt non rendu est expir\u00e9 pour cet utilisateur.
bookBorrowedDao.getBorrowsAlmostExpiredForUser.notFound = Aucun emprunt n'a \u00e9t\u00e9 trouv\u00e9.
bookBorrowedDao.countBorrowsByBook.notFound                 = Aucun emprunt n'a \u00e9t\u00e9 trouv\u00e9.
bookBorrowedDao.updateBookBorrowed.notFound                 = L'emprunt n'a pas \u00e9t\u00e9 trouv\u00e9. La mise \u00e0 jour n'a pas \u00e9t\u00e9 faite.
bookBorrowedDao.updateBookBorrowed.integrityViolation       = Les donn\u00e9es n'\u00e9tant pas conformes, la mise \u00e0 jour de l'emprunt n'a pas pu \u00eatre r\u00e9alis\u00e9e.
bookBorrowedDao.insertBookBorrowed.duplicate                = Un emprunt existe d\u00e9j\u00e0 avec ces identifiants.
bookBorrowedDao.insertBookBorrowed.integrityViolation       = Les donn\u00e9es n'\u00e9tant pas conformes, la cr\u00e9ation de l'emprunt n'a pu \u00eatre r\u00e9alis\u00e9e.
bookBorrowedDao.deleteBookBorrowed.notFound                 = L'emprunt \u00e0 supprimer n'a pas \u00e9t\u00e9 trouv\u00e9. La suppression n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.

# GenreDao
genreDao.getGenre.notFound                                  = Le genre n'a pas \u00e9t\u00e9 trouv\u00e9.
genreDao.updateGenre.notFound                               = Le genre \u00e0 modifier n'a pas \u00e9t\u00e9 trouv\u00e9. La mise \u00e0 jour n'a pas \u00e9t\u00e9 faite.
genreDao.updateGenre.integrityViolation                     = Les donn\u00e9es n'\u00e9tant pas conformes, la mise \u00e0 jour du genre n'a pas pu \u00eatre r\u00e9alis\u00e9e.
genreDao.insertGenre.duplicate                              = Un genre existe d\u00e9j\u00e0 avec cet identifiant.
genreDao.insertGenre.integrityViolation                     = Les donn\u00e9es n'\u00e9tant pas conformes, la cr\u00e9ation du genre n'a pu \u00eatre r\u00e9alis\u00e9e.
genreDao.deleteGenre.notFound                               = Le genre \u00e0 supprimer n'a pas \u00e9t\u00e9 trouv\u00e9. La suppression n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.

# PublisherDao
publisherDao.getPublisher.notFound                          = L'\u00e9diteur n'a pas \u00e9t\u00e9 trouv\u00e9.
publisherDao.updatePublisher.notFound                       = L'\u00e9diteur \u00e0 modifier n'a pas \u00e9t\u00e9 trouv\u00e9. La mise \u00e0 jour n'a pas \u00e9t\u00e9 faite.
publisherDao.updatePublisher.integrityViolation             = Les donn\u00e9es n'\u00e9tant pas conformes, la mise \u00e0 jour de l'\u00e9diteur n'a pu \u00eatre faite.
publisherDao.insertPublisher.duplicate                      = Un \u00e9diteur existe d\u00e9j\u00e0 avec cet identifiant.
publisherDao.insertPublisher.integrityViolation             = Les donn\u00e9es n'\u00e9tant pas conformes, la cr\u00e9ation de l'\u00e9diteur n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.
publisherDao.deletePublisher.notFound                       = L'\u00e9diteur \u00e0 supprimer n'a pas \u00e9t\u00e9 trouv\u00e9. La suppression n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.

# StockDao
stockDao.getStock.notFound                                  = Le stock n'a pas \u00e9t\u00e9 trouv\u00e9.
stockDao.getStockForBook.notFound                           = Le stock pour le livre n'a pas \u00e9t\u00e9 trouv\u00e9.
stockDao.getBookStockList.notFound                          = Aucun stock n'a \u00e9t\u00e9 trouv\u00e9.
stockDao.updateStock.notFound                               = Le stock \u00e0 modifier n'a pas \u00e9t\u00e9 trouv\u00e9. La mise \u00e0 jour du stock n'a pas pu \u00eatre r\u00e9alis\u00e9e.
stockDao.updateStock.integrityViolation                     = Les donn\u00e9es n'\u00e9tant pas conformes, la mise \u00e0 jour n'a pu \u00eatre faite.
stockDao.insertStock.duplicate                              = Un stock existe d\u00e9j\u00e0 avec cet identifiant.
stockDao.insertStock.integrityViolation                     = Les donn\u00e9es n'\u00e9tant pas conformes, la cr\u00e9ation du stock n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.
stockDao.deleteStock.notFound                               = Le stock \u00e0 supprimer n'a pas \u00e9t\u00e9 trouv\u00e9. La suppression n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.

# AddressDao
addressDao.getAddress.notFound                              = L'adresse n'a pas \u00e9t\u00e9 trouv\u00e9e.
addressDao.updateAddress.notFound                           = L'adresse \u00e0 modifier n'a pas \u00e9t\u00e9 trouv\u00e9e. La mise \u00e0 jour de l'adresse n'a pas pu \u00eatre r\u00e9alis\u00e9e.
addressDao.updateAddress.integrityViolation                 = Les donn\u00e9es n'\u00e9tant pas conformes, la mise \u00e0 jour n'a pu \u00eatre faite.
addressDao.insertAddress.duplicate                          = Une adresse existe d\u00e9j\u00e0 avec cet identifiant.
addressDao.insertAddress.integrityViolation                 = Les donn\u00e9es n'\u00e9tant pas conformes, la cr\u00e9ation de l'adresse n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.
addressDao.deleteAddress.notFound                           = L'adresse \u00e0 supprimer n'a pas \u00e9t\u00e9 trouv\u00e9e. La suppression n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.

# RoleDao
roleDao.getRole.notFound                                    = Le role n'a pas \u00e9t\u00e9 trouv\u00e9e.
roleDao.getRolesForUser.notFound                            = Aucun role n'a \u00e9t\u00e9 trouv\u00e9e pour l'utilisateur.
roleDao.updateRole.notFound                                 = Le role \u00e0 modifier n'a pas \u00e9t\u00e9 trouv\u00e9. La mise \u00e0 jour du role n'a pas pu \u00eatre r\u00e9alis\u00e9e.
roleDao.updateRole.integrityViolation                       = Les donn\u00e9es n'\u00e9tant pas conformes, la mise \u00e0 jour n'a pu \u00eatre faite.
roleDao.insertRole.duplicate                                = Le Role  existe d\u00e9j\u00e0 avec cet identifiant.
roleDao.insertRole.integrityViolation                       = Les donn\u00e9es n'\u00e9tant pas conformes, la cr\u00e9ation du role n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.
roleDao.insertUserRole.duplicate                            = Le role est d\u00e9j\u00e0 associ\u00e9 \u00e0 cet utilisateur.
roleDao.insertUserRole.integrityViolation                   = Les donn\u00e9es n'\u00e9tant pas conformes, l'ajout du role \u00e0 cet utilisateur n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.
roleDao.deleteRole.notFound                                 = Le role \u00e0 supprimer n'a pas \u00e9t\u00e9 trouv\u00e9e. La suppression n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.

# UserDao
UserDao.getUser.notFound                                    = L'utilisateur n'a pas \u00e9t\u00e9 trouv\u00e9.
UserDao.getUserByLogin.notFound                             = L'utilisateur n'a pas \u00e9t\u00e9 trouv\u00e9.
UserDao.getUserWithBorrowsExpired.notFound                  = Aucun utilisateur n'a \u00e9t\u00e9 trouv\u00e9.
UserDao.getUserBeforeReminder.notFound = Aucun utilisateur n'a \u00e9t\u00e9 trouv\u00e9.
UserDao.updateUser.notFound                                 = L'utilisateur \u00e0 modifier n'a pas \u00e9t\u00e9 trouv\u00e9. La mise \u00e0 jour de l'utilisateur n'a pu \u00eatre faite.
UserDao.updateUser.integrityViolation                       = Les donn\u00e9es n'\u00e9tant pas conformes, la mise \u00e0 jour n'a pu \u00eatre faite.
userDao.insertUser.duplicate                                = Un utilisateur existe d\u00e9j\u00e0 avec cet identifiant.
userDao.insertUser.integrityViolation                       = Les donn\u00e9es n'\u00e9tant pas conformes, la cr\u00e9ation de l'utilisateur n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.
userDao.deleteUser.notFound                                 = L'utilisateur \u00e0 supprimer n'a pas \u00e9t\u00e9 trouv\u00e9e. La suppression n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.

# UserOptionsDao
UserOptionsDao.getUserOptions.notFound = Les options de l'utilisateur n'ont pas \u00e9t\u00e9 trouv\u00e9es.
UserOptionsDao.updateUserOptions.notFound = Les options de l'utilisateur \u00e0 modifier n'ont pas \u00e9t\u00e9 trouv\u00e9es. La mise \u00e0 jour des options de l'utilisateur n'a pas pu \u00eatre r\u00e9alis\u00e9es.
UserOptionsDao.updateUserOptions.integrityViolation = Les donn\u00e9es n'\u00e9tant pas conformes, la mise \u00e0 jour n'a pu \u00eatre faite.
UserOptionsDao.insertUserOptions.duplicate = Les options d'un utilisateur existe d\u00e9j\u00e0 avec cet identifiant.
UserOptionsDao.insertUserOptions.integrityViolation = Les donn\u00e9es n'\u00e9tant pas conformes, la cr\u00e9ation des options de l'utilisateur n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.
UserOptionsDao.deleteUserOptions.notFound = Les options de l'utilisateur \u00e0 supprimer n'ont pas \u00e9t\u00e9 trouv\u00e9es. La suppression n'a pas \u00e9t\u00e9 r\u00e9alis\u00e9e.
